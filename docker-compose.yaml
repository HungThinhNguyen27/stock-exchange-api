
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    ports:
      - "${MYSQL_PORT}:3306"
    expose:
      - 3306
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - stock-exchange-apis-networks

  stock-echange:
    build: 
        context: ../PROJECTS
        dockerfile: Dockerfile
    container_name: stock-exchange
    restart: unless-stopped 
    environment:
      - MYSQL_PORT=3306
      - MYSQL_HOST=mysql
      - REDIS_PORT=6379
      - REDIS_HOST=redis
    ports:
      - ${STOCK_EXCHANGE_PORT}:5000
    volumes:
        - ./data_file:/app/data
    networks:
      - stock-exchange-apis-networks

  redis:  
    image: redis:latest
    container_name: redis-container
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - stock-exchange-apis-networks

  # webserver:
  #   image: apache/airflow:latest
  #   restart: always
  #   depends_on:
  #       - mysql
  #   environment:
  #       - LOAD_EX=n
  #       - EXECUTOR=Local
  #   volumes:
  #       - ./airflow:/opt/airflow
  #       - ./airflow/logs:/opt/airflow/logs
  #   ports:
  #       - "8080:8080"
  #   command: >
  #     bash -c "airflow db init && 
  #              airflow users create --username admin --password admin --firstname First --lastname Last --role Admin --email admin@example.com && 
  #              airflow webserver"
  #   healthcheck:
  #       test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
  #       interval: 30s
  #       timeout: 30s
  #       retries: 3
  #   networks:
  #     - stock-exchange-apis-networks

  # scheduler:
  #   image: apache/airflow:latest
  #   restart: always
  #   depends_on:
  #       - mysql
  #   environment:
  #       - LOAD_EX=n
  #       - EXECUTOR=Local
  #   volumes:
  #       - ./airflow:/opt/airflow
  #       - ./airflow/logs:/opt/airflow/logs
  #   command: bash -c "airflow db init && airflow webserver && airflow scheduler"
    # networks:
    #   - stock-exchange-apis-networks

networks:
  stock-exchange-apis-networks:
    name:  stock-exchange-apis-networks
    driver: bridge
    external: true



# docker-compose --env-file config.yaml up --detach
# docker-compose stop stock-echange
# docker-compose build stock-echange
# docker-compose up -d stock-echange
# docker-compose --env-file .env --file ./docker-compose.yaml up --detach
# docker run -v ./Users/macos/Desktop:/Users/macos/Downloads/WORKSPACE/stock_project stock_project-stock-echange
#/Users/macos/Desktop